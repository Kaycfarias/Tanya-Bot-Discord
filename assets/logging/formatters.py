"""
Formatadores personalizados para logging do bot Tanya.
Inclui formata√ß√£o com cores e emojis para diferentes n√≠veis de log.
"""

import logging
from .colors import Colors


class ColoredFormatter(logging.Formatter):
    """Formatter personalizado com cores para diferentes n√≠veis de log."""
    
    # Mapeamento de n√≠veis para cores
    LEVEL_COLORS = {
        logging.DEBUG: Colors.CYAN,
        logging.INFO: Colors.BRIGHT_GREEN,
        logging.WARNING: Colors.BRIGHT_YELLOW,
        logging.ERROR: Colors.BRIGHT_RED,
        logging.CRITICAL: Colors.BRIGHT_MAGENTA + Colors.BOLD,
    }
    
    # Mapeamento de emojis para cores
    EMOJI_COLORS = {
        'üöÄ': Colors.BRIGHT_BLUE,
        '‚úÖ': Colors.BRIGHT_GREEN,
        '‚ùå': Colors.BRIGHT_RED,
        '‚ö†Ô∏è': Colors.BRIGHT_YELLOW,
        'üëã': Colors.BRIGHT_CYAN,
        'üîß': Colors.YELLOW,
        'üì¶': Colors.BLUE,
        'üóÇÔ∏è': Colors.MAGENTA,
        'üìÅ': Colors.BLUE,
        '‚ö°': Colors.YELLOW,
        'ü§ñ': Colors.BRIGHT_MAGENTA,
        'üë§': Colors.CYAN,
        'üÜî': Colors.GRAY,
        'üìã': Colors.BLUE,
        'üåê': Colors.GREEN,
        'üë•': Colors.CYAN,
        'üì∫': Colors.BLUE,
        '‚è∞': Colors.YELLOW,
        'üéâ': Colors.BRIGHT_GREEN,
    }
    
    def __init__(self, fmt=None, datefmt=None):
        super().__init__(fmt, datefmt)
    
    def format(self, record):
        # Fazer uma c√≥pia do record para n√£o alterar o original
        record_copy = logging.makeLogRecord(record.__dict__)
        
        # Aplicar cor ao n√≠vel de log
        level_color = self.LEVEL_COLORS.get(record_copy.levelno, Colors.WHITE)
        record_copy.levelname = Colors.colorize(record_copy.levelname, level_color)
        
        # Colorir emojis na mensagem
        if hasattr(record_copy, 'msg') and isinstance(record_copy.msg, str):
            message = record_copy.msg
            
            # Aplicar cores aos emojis
            for emoji, color in self.EMOJI_COLORS.items():
                if emoji in message:
                    colored_emoji = Colors.colorize(emoji, color)
                    message = message.replace(emoji, colored_emoji)
            
            record_copy.msg = message
        
        return super().format(record_copy)


class PlainFormatter(logging.Formatter):
    """Formatter simples sem cores para arquivos de log."""
    
    def __init__(self, fmt=None, datefmt=None):
        super().__init__(fmt, datefmt)
    
    def format(self, record):
        # Usar o formatter padr√£o sem modifica√ß√µes
        return super().format(record)